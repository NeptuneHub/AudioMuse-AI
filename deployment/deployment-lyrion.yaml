apiVersion: v1
kind: Namespace
metadata:
  name: test
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: test
type: Opaque
stringData:
  POSTGRES_USER: "audiomuse"
  POSTGRES_PASSWORD: "audiomusepassword"
  POSTGRES_DB: "audiomusedb"
---
apiVersion: v1
kind: Secret
metadata:
  name: gemini-api-credentials
  namespace: test
type: Opaque
stringData:
  GEMINI_API_KEY: "YOUR-GEMINI_API_KEY"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: audiomuse-ai-config
  namespace: test
data:
  MEDIASERVER_TYPE: "lyrion"
  LYRION_URL: "http://YOUR-LYRION-URL"
  POSTGRES_HOST: "postgres-service.test"
  POSTGRES_PORT: "5432"
  REDIS_URL: "redis://redis-service.test:6379/0"
  TEMP_DIR: "/app/temp_audio"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: test
  labels:
    app: redis
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      tier: backend
  template:
    metadata:
      labels:
        app: redis
        tier: backend
    spec:
      containers:
      - name: master
        image: redis:7-alpine
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: test
  labels:
    app: redis
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    tier: backend
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: test
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: test
  labels:
    app: postgres
    tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      tier: database
  template:
    metadata:
      labels:
        app: postgres
        tier: database
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        envFrom:
        - secretRef:
            name: postgres-credentials
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: test
spec:
  selector:
    app: postgres
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audiomuse-ai-flask
  namespace: test
  labels:
    app: audiomuse-ai
    component: flask
spec:
  replicas: 1
  selector:
    matchLabels:
      app: audiomuse-ai
      component: flask
  template:
    metadata:
      labels:
        app: audiomuse-ai
        component: flask
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
      - name: flask-app
        image: ghcr.io/neptunehub/audiomuse-ai:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: SERVICE_TYPE
          value: "flask"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_DB
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: gemini-api-credentials
              key: GEMINI_API_KEY
        - name: LYRION_URL
          valueFrom:
            configMapKeyRef:
              name: audiomuse-ai-config
              key: LYRION_URL
        envFrom:
        - configMapRef:
            name: audiomuse-ai-config
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: app-temp-audio
          mountPath: /app/temp_audio
      volumes:
      - name: app-temp-audio
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: audiomuse-ai-flask-service
  namespace: test
  labels:
    app: audiomuse-ai
    component: flask
spec:
  selector:
    app: audiomuse-ai
    component: flask
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audiomuse-ai-worker
  namespace: test
  labels:
    app: audiomuse-ai
    component: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: audiomuse-ai
      component: worker
  template:
    metadata:
      labels:
        app: audiomuse-ai
        component: worker
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
      - name: rq-worker
        image: ghcr.io/neptunehub/audiomuse-ai:latest
        imagePullPolicy: Always
        env:
        - name: SERVICE_TYPE
          value: "worker"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_DB
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: gemini-api-credentials
              key: GEMINI_API_KEY
        - name: LYRION_URL
          valueFrom:
            configMapKeyRef:
              name: audiomuse-ai-config
              key: LYRION_URL
        envFrom:
        - configMapRef:
            name: audiomuse-ai-config
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: app-temp-audio
          mountPath: /app/temp_audio
      volumes:
      - name: app-temp-audio
        emptyDir: {}
